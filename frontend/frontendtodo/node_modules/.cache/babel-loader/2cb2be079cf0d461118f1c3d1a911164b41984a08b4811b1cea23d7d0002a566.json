{"ast":null,"code":"var _jsxFileName = \"E:\\\\CiCd\\\\todo-app\\\\frontend\\\\frontendtodo\\\\src\\\\components\\\\Tasklist.js\",\n  _s = $RefreshSig$();\n// export default TaskList;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Tasklist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch tasks from the server\n  useEffect(() => {\n    axios.get('http://127.0.0.1:8000/api/tasks/').then(response => {\n      setTasks(response.data);\n    }).catch(error => {\n      console.error('Error fetching tasks:', error);\n    });\n  }, []);\n\n  // Function to delete a task\n  const handleDelete = taskId => {\n    // Ask for confirmation before deleting\n    const confirmDelete = window.confirm('Are you sure you want to delete this task?');\n    if (confirmDelete) {\n      axios.delete(`http://127.0.0.1:8000/api/tasks/${taskId}/`).then(response => {\n        console.log('Task deleted:', response.data);\n        // Update the state to remove the deleted task\n        setTasks(tasks.filter(task => task.id !== taskId));\n      }).catch(error => {\n        console.error('Error deleting task:', error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"heading-h3\",\n      children: \"Task To Accomplish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"title\",\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"descprition\",\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"duedate\",\n        children: [\"Due Date: \", task.due_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status\",\n        children: [\"Status: \", task.status ? 'Completed' : 'Pending']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-delete\",\n        onClick: () => handleDelete(task.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","get","then","response","data","catch","error","console","handleDelete","taskId","confirmDelete","window","confirm","delete","log","filter","task","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","title","description","due_date","status","onClick","_c","$RefreshReg$"],"sources":["E:/CiCd/todo-app/frontend/frontendtodo/src/components/Tasklist.js"],"sourcesContent":["\r\n// export default TaskList;\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Tasklist.css'\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  // Fetch tasks from the server\r\n  useEffect(() => {\r\n    axios\r\n      .get('http://127.0.0.1:8000/api/tasks/')\r\n      .then((response) => {\r\n        setTasks(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching tasks:', error);\r\n      });\r\n  }, []);\r\n\r\n  // Function to delete a task\r\n  const handleDelete = (taskId) => {\r\n    // Ask for confirmation before deleting\r\n    const confirmDelete = window.confirm('Are you sure you want to delete this task?');\r\n    if (confirmDelete) {\r\n      axios\r\n        .delete(`http://127.0.0.1:8000/api/tasks/${taskId}/`)\r\n        .then((response) => {\r\n          console.log('Task deleted:', response.data);\r\n          // Update the state to remove the deleted task\r\n          setTasks(tasks.filter(task => task.id !== taskId));\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error deleting task:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <h3 className='heading-h3'>Task To Accomplish</h3>\r\n      {tasks.map((task) => (\r\n        <div key={task.id} className=\"task\">\r\n          <h4 className='title'>{task.title}</h4>\r\n          <p className='descprition'>{task.description}</p>\r\n          <p className='duedate'>Due Date: {task.due_date}</p>\r\n          <p className='status'>Status: {task.status ? 'Completed' : 'Pending'}</p>\r\n          {/* Add Delete button for each task */}\r\n          <button className='button-delete' onClick={() => handleDelete(task.id)}>Delete</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACdC,KAAK,CACFO,GAAG,CAAC,kCAAkC,CAAC,CACvCC,IAAI,CAAEC,QAAQ,IAAK;MAClBH,QAAQ,CAACG,QAAQ,CAACC,IAAI,CAAC;IACzB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,YAAY,GAAIC,MAAM,IAAK;IAC/B;IACA,MAAMC,aAAa,GAAGC,MAAM,CAACC,OAAO,CAAC,4CAA4C,CAAC;IAClF,IAAIF,aAAa,EAAE;MACjBhB,KAAK,CACFmB,MAAM,CAAC,mCAAmCJ,MAAM,GAAG,CAAC,CACpDP,IAAI,CAAEC,QAAQ,IAAK;QAClBI,OAAO,CAACO,GAAG,CAAC,eAAe,EAAEX,QAAQ,CAACC,IAAI,CAAC;QAC3C;QACAJ,QAAQ,CAACD,KAAK,CAACgB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKR,MAAM,CAAC,CAAC;MACpD,CAAC,CAAC,CACDJ,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,CAAC;IACN;EACF,CAAC;EAED,oBACEV,OAAA;IAAKsB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBvB,OAAA;MAAIsB,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjDxB,KAAK,CAACyB,GAAG,CAAER,IAAI,iBACdpB,OAAA;MAAmBsB,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjCvB,OAAA;QAAIsB,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAEH,IAAI,CAACS;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvC3B,OAAA;QAAGsB,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEH,IAAI,CAACU;MAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjD3B,OAAA;QAAGsB,SAAS,EAAC,SAAS;QAAAC,QAAA,GAAC,YAAU,EAACH,IAAI,CAACW,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpD3B,OAAA;QAAGsB,SAAS,EAAC,QAAQ;QAAAC,QAAA,GAAC,UAAQ,EAACH,IAAI,CAACY,MAAM,GAAG,WAAW,GAAG,SAAS;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEzE3B,OAAA;QAAQsB,SAAS,EAAC,eAAe;QAACW,OAAO,EAAEA,CAAA,KAAMrB,YAAY,CAACQ,IAAI,CAACC,EAAE,CAAE;QAAAE,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAN/EP,IAAI,CAACC,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOZ,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzB,EAAA,CAhDID,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AAkDd,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}